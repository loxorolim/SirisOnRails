



 <script id="pointVertexShader" type="x-shader/x-vertex">
    attribute vec4 worldCoord;
    attribute float aPointSize;

    uniform mat4 mapMatrix;

    void main() {
        // transform world coordinate by matrix uniform variable
        gl_Position = mapMatrix * worldCoord;
        gl_PointSize = aPointSize;

    }
</script>
 <script id="pointFragmentShader" type="x-shader/x-vertex">
    precision mediump float;

        void main() {
            gl_FragColor = vec4(1.0, 0.0, 0.0, 0.5);
        }
</script>
<script>
function download() {
  var toSave ="";
  toSave+= meters.length + "\n" ;
  for(var i = 0; i < meters.length; i++){
	toSave += meters[i].getPosition().lat() + " " + meters[i].getPosition().lng() + "\n";
  }
  toSave+= poles.length+ "\n" ;
  for(var i = 0; i < poles.length; i++){
	toSave += poles[i].getPosition().lat() + " " + poles[i].getPosition().lng() + "\n";
  }
  toSave+= daps.length + "\n" ;
  for(var i = 0; i < daps.length; i++){
	toSave += daps[i].getPosition().lat() + " " + daps[i].getPosition().lng() + "\n";
  }
  

  var pom = document.createElement('a');
  pom.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(toSave));
  pom.setAttribute('download', "viz"+meters.length+"-"+poles.length+"-"+daps.length+".txt");
  pom.click();
}
function upload(fileInput) {

	if (window.File && window.FileReader && window.FileList && window.Blob) {
		

		var file = fileInput.files[0];
		var textType = /text.*/;

		if (file.type.match(textType)) {
			var reader = new FileReader();

			reader.onload = function(e) {
				var fileText = reader.result;
				loadElements(fileText);
				
			}

			reader.readAsText(file);	
		} else {
			alert("File not supported!");
		}
	} else {
	  alert('The File APIs are not fully supported by your browser.');
	}
}

function loadElements(text)
{
	var split = text.split("\n");
	for(var i = 0; i < meters.length; i++){ 
		meters[i].remove();
		i--;
	}
	for(var i = 0; i < poles.length; i++){ 
	poles[i].remove();
	i--;
	}
	for(var i = 0; i < daps.length; i++){ 
	daps[i].remove();
	i--;
	}
	var metersLength = parseInt(split[0]);
	for(var i = 0 ; i < metersLength; i ++){
		var coords = split[i].split(" ");
		var lat = parseFloat(coords[0]);
		var lng = parseFloat(coords[1]);
		//var latlng = new google.maps.LatLng(lat,lng);
		var newMeter = createMeter();
		newMeter.placeOnMap(lat,lng);	
	}
	var polesLength = parseInt(split[metersLength+1]);
	var startPoint = metersLength+2;
	for(var i = startPoint ; i < startPoint+polesLength; i ++){
		var coords = split[i].split(" ");
		var lat = parseFloat(coords[0]);
		var lng = parseFloat(coords[1]);
		//var latlng = new google.maps.LatLng(lat,lng);
		var newPole = createPole();
		newPole.placeOnMap(lat,lng);	
	}
	var dapsLength = parseInt(split[startPoint+polesLength]);
	startPoint = startPoint + polesLength+1;
	for(var i = startPoint ; i < startPoint+dapsLength; i ++){
		var coords = split[i].split(" ");
		var lat = parseFloat(coords[0]);
		var lng = parseFloat(coords[1]);
		//var latlng = new google.maps.LatLng(lat,lng);
		var newDap = createDAP();
		newDap.placeOnMap(lat,lng);	
	}
}

function sendFile(){
	
    var formData = new FormData($("form#data")[0]);

    $.ajax({
        url: "uploadFile",
        type: 'POST',
        data: formData,
        async: false,
        success: function (data) {
            alert(data)
        },
        cache: false,
        contentType: false,
        processData: false
    });

    return false;
	}
</script>


     
<div id=" wrapper">
    <div id="map_canvas">
        
    </div>
   
    <div id="over_map">
        <div id="controller">
            <div id="trapezoid">

                <div id="insideTrapezoid">

                    <div id="chooseScenario" class="insideOptions">
                        <div style=" display: table; margin: 0 auto;">
                            <div id="scenario" class="selections">Urbano</div>
                            <button id="selectScenario" style="float:left; height: 30px"></button>
                        </div>
                        <ul style=" z-index: 1000">
                            <li id="urbanRadio">Urban</li>
                            <li id="suburbanRadio">Suburban</li>
                            <li id="ruralRadio">Rural</li>
                        </ul>
                    </div>
                    <div id="chooseTechnology" class="insideOptions">
                        <div style=" display: table; margin: 0 auto;">
                            <div id="technology" class="selections">ZigBee</div>
                            <button id="selectTechnology" style="float:left; height: 30px"></button>
                        </div>
                        <ul style =" z-index: 1000">
                            <li id="ZigBee">ZigBee</></li>
                            <li id="80211a">802.11.a</></li>
                            <li id="80211g">802.11.g</></li>
                        </ul>
                    </div>
                    <div id="choosePower" class="insideOptions">
                        <div style=" display: table; margin: 0 auto;">
                            <span id="power" class="selections">-20 dBm</span>
                        </div>

                        <div id="slider" style=" display: table; margin: 0 auto;"></div>
                    </div>
                    
                </div>
                <div id="radio" style="position: absolute;margin-top: 64px;margin-left:40px;">
                    <input type="radio" id="viewRadio" name="radio" checked="checked"><label for="viewRadio">Visualização</label>
                    <input type="radio" id="dapRadio" name="radio"><label for="dapRadio">DAP</label>
                    <input type="radio" id="meterRadio" name="radio" ><label for="meterRadio">Medidor</label>
                    <input type="radio" id="pole" name="radio"><label for="pole">Poste</label>
                    <input type="radio" id="eraserRadio" name="radio"><label for="eraserRadio">Remoção</label>

                    <button id="autoPlanning" style="margin-left: 50px">Auto Planning</button>
                    <input type="checkbox" id="checkHeatmap"><label for="checkHeatmap">Heatmap</label>
                    <!-- <input type="checkbox" id="checkCluster"><label for="checkCluster">Junção de componentes</label>-->
                    <input type="checkbox" id="checkRFMesh"><label for="checkRFMesh">RF-Mesh</label>
                    <button id="statistic">Coletar Estatísticas</button>
					<button id="upload">Upload de arquivo</button>
					<button id="download">Download de planejamento</button>
                    <!-- <button id="generator">Gerar Vizinhança Entre Pontos</button>-->
                    
                </div>
            </div>
        </div>
        <div id="statisticDialog" class = "hidden" title="Estatísticas">
        </div>
		<div id="uploadDialog" class = "hidden" title="Upload">
<!-- 		<form accept-charset="UTF-8" action="/uploadFile" id="data" method="post" enctype="multipart/form-data" onsubmit="return sendFile();">
			<input id = "upload_datafile" name="upload[datafile]" type="file" />
		<button>Submit</button> -->
		
		<input type="file"  onchange="upload(this)" />
		
        </div>
  </div>


