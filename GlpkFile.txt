set Z;
 set Y;
 param A{r in Z, m in Y} default 0, binary;
 var Route{m in Y}, binary;
 minimize cost: sum{m in Y} Route[m];
 subject to covers{r in Z}: sum{m in Y} A[r,m]*Route[m]>=1;
 solve; 
 printf {m in Y:  Route[m] == 1} "%s ", m > "C:/Users/Guilherme/Documents/GitHub/SirisOnRails/Results.txt";
 data;
set Z:= Z14 Z29 Z74 Z75 Z76 Z77 Z78 Z79 ;
set Y:= Y3 Y4 Y5 Y6 Y7 Y8 Y9 Y10 Y11 Y12 Y16 Y17 Y18 Y19 Y20 Y21 Y22 Y26 Y27 Y28 Y29 Y30 Y1 Y2 Y13 Y14 Y15 Y23 Y24 Y25 ;
param A := 
[Z14,Y12] 1[Z14,Y13] 1[Z29,Y21] 1[Z29,Y23] 1[Z74,Y22] 1[Z74,Y23] 1[Z75,Y22] 1[Z75,Y23] 1[Z76,Y25] 1[Z77,Y25] 1[Z78,Y25] 1[Z79,Y24] 1
;end;
