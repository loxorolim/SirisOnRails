set Z;
 set Y;
 param A{r in Z, m in Y} default 0, binary;
 var Route{m in Y}, binary;
 minimize cost: sum{m in Y} Route[m];
 subject to covers{r in Z}: sum{m in Y} A[r,m]*Route[m]>=1;
 solve; 
 printf {m in Y:  Route[m] == 1} "%s ", m > "Results.txt";
 data;
set Z:= Z1 Z2 Z3 Z4 Z5 Z6 Z7 Z8 Z9 Z10 Z11 Z12 Z13 Z14 Z15 Z16 Z17 Z18 Z19 Z20 ;
set Y:= Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8 Y9 Y10 Y11 ;
param A := 
[Z1,Y1] 1[Z1,Y2] 1[Z1,Y3] 1[Z1,Y9] 1[Z1,Y10] 1[Z1,Y11] 1[Z2,Y1] 1[Z2,Y2] 1[Z2,Y3] 1[Z2,Y4] 1[Z2,Y9] 1[Z2,Y10] 1[Z2,Y11] 1[Z3,Y1] 1[Z3,Y2] 1[Z3,Y3] 1[Z3,Y4] 1[Z3,Y5] 1[Z3,Y9] 1[Z3,Y10] 1[Z3,Y11] 1[Z4,Y1] 1[Z4,Y2] 1[Z4,Y3] 1[Z4,Y4] 1[Z4,Y5] 1[Z5,Y1] 1[Z5,Y2] 1[Z5,Y3] 1[Z5,Y4] 1[Z5,Y5] 1[Z6,Y2] 1[Z6,Y3] 1[Z6,Y4] 1[Z6,Y5] 1[Z6,Y6] 1[Z7,Y3] 1[Z7,Y4] 1[Z7,Y5] 1[Z7,Y6] 1[Z8,Y3] 1[Z8,Y4] 1[Z8,Y5] 1[Z8,Y6] 1[Z9,Y4] 1[Z9,Y5] 1[Z9,Y6] 1[Z10,Y5] 1[Z10,Y6] 1[Z11,Y6] 1[Z11,Y7] 1[Z11,Y8] 1[Z11,Y9] 1[Z12,Y6] 1[Z12,Y7] 1[Z12,Y8] 1[Z12,Y9] 1[Z12,Y10] 1[Z12,Y11] 1[Z13,Y6] 1[Z13,Y7] 1[Z13,Y8] 1[Z13,Y9] 1[Z13,Y10] 1[Z13,Y11] 1[Z14,Y1] 1[Z14,Y6] 1[Z14,Y7] 1[Z14,Y8] 1[Z14,Y9] 1[Z14,Y10] 1[Z14,Y11] 1[Z15,Y1] 1[Z15,Y7] 1[Z15,Y8] 1[Z15,Y9] 1[Z15,Y10] 1[Z15,Y11] 1[Z16,Y1] 1[Z16,Y2] 1[Z16,Y3] 1[Z16,Y9] 1[Z16,Y10] 1[Z16,Y11] 1[Z17,Y1] 1[Z17,Y2] 1[Z17,Y3] 1[Z17,Y9] 1[Z17,Y10] 1[Z17,Y11] 1[Z18,Y1] 1[Z18,Y2] 1[Z18,Y3] 1[Z18,Y8] 1[Z18,Y9] 1[Z18,Y10] 1[Z18,Y11] 1[Z19,Y1] 1[Z19,Y2] 1[Z19,Y8] 1[Z19,Y9] 1[Z19,Y10] 1[Z19,Y11] 1[Z20,Y6] 1[Z20,Y7] 1[Z20,Y8] 1[Z20,Y9] 1[Z20,Y10] 1[Z20,Y11] 1
;end;
