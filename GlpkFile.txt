set Z;
 set Y;
 param A{r in Z, m in Y} default 0, binary;
param B{r in Z} default 1, integer;
 var Route{m in Y}, binary;
 minimize cost: sum{m in Y} Route[m];
 subject to covers{r in Z}: sum{m in Y} A[r,m]*Route[m]>=B[r];
 solve; 
 printf {m in Y:  Route[m] == 1} "%s ", m > "C:/Users/Guilherme/Documents/GitHub/SirisOnRails/SirisOnRails/Results.txt";
 data;
set Z:= Z11 Z12 Z13 Z14 Z15 Z16 Z17 Z18 Z19 Z20 Z21 Z22 Z23 Z26 Z27 Z28 Z29 Z30 Z31 ;
set Y:= Y0 Y1 Y2 Y3 Y4 Y5 Y6 Y7 Y8 Y9 Y10 Y11 Y12 Y13 Y14 Y15 Y16 Y17 Y18 Y19 Y20 Y21 Y22 Y23 Y24 Y25 Y26 Y27 ;
param A := 
[Z11,Y18] 1[Z11,Y19] 1[Z11,Y21] 1[Z11,Y22] 1[Z11,Y23] 1[Z11,Y24] 1[Z12,Y18] 1[Z12,Y19] 1[Z12,Y21] 1[Z12,Y22] 1[Z12,Y23] 1[Z12,Y24] 1[Z13,Y18] 1[Z13,Y19] 1[Z13,Y21] 1[Z13,Y22] 1[Z13,Y23] 1[Z13,Y24] 1[Z14,Y18] 1[Z14,Y19] 1[Z14,Y21] 1[Z14,Y22] 1[Z14,Y23] 1[Z14,Y24] 1[Z15,Y18] 1[Z15,Y19] 1[Z15,Y21] 1[Z15,Y22] 1[Z15,Y23] 1[Z15,Y24] 1[Z16,Y18] 1[Z16,Y19] 1[Z16,Y21] 1[Z16,Y22] 1[Z16,Y23] 1[Z16,Y24] 1[Z17,Y18] 1[Z17,Y19] 1[Z17,Y21] 1[Z17,Y22] 1[Z17,Y23] 1[Z17,Y24] 1[Z18,Y25] 1[Z19,Y25] 1[Z19,Y26] 1[Z19,Y27] 1[Z20,Y12] 1[Z20,Y13] 1[Z20,Y14] 1[Z20,Y15] 1[Z20,Y27] 1[Z21,Y12] 1[Z21,Y13] 1[Z21,Y14] 1[Z21,Y15] 1[Z21,Y27] 1[Z22,Y12] 1[Z22,Y13] 1[Z22,Y14] 1[Z22,Y15] 1[Z22,Y27] 1[Z23,Y0] 1[Z23,Y1] 1[Z23,Y12] 1[Z23,Y13] 1[Z23,Y14] 1[Z23,Y15] 1[Z23,Y27] 1[Z26,Y0] 1[Z26,Y1] 1[Z26,Y12] 1[Z26,Y13] 1[Z26,Y14] 1[Z26,Y15] 1[Z26,Y27] 1[Z27,Y1] 1[Z27,Y12] 1[Z27,Y13] 1[Z27,Y14] 1[Z27,Y15] 1[Z27,Y27] 1[Z28,Y12] 1[Z28,Y13] 1[Z28,Y14] 1[Z28,Y15] 1[Z28,Y27] 1[Z29,Y12] 1[Z29,Y13] 1[Z29,Y14] 1[Z29,Y15] 1[Z29,Y27] 1[Z30,Y12] 1[Z30,Y13] 1[Z30,Y14] 1[Z30,Y15] 1[Z30,Y27] 1[Z31,Y12] 1[Z31,Y13] 1[Z31,Y14] 1[Z31,Y15] 1[Z31,Y27] 1
;
param B := 

;
end;
